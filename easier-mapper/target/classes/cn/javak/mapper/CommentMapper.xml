<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.javak.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="cn.javak.pojo.Comment">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="blog_id" jdbcType="INTEGER" property="blogId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="star_num" jdbcType="INTEGER" property="starNum" />
  </resultMap>
  <sql id="Base_Column_List">
    comment_id, blog_id, user_id, content, create_time, star_num
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <select id="selectByBlogId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comment
    where blog_id = #{blogId,jdbcType=INTEGER}
    order by create_time desc;
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByBlogId" parameterType="java.lang.Integer">
    delete from comment
    where blog_id = #{blogId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="comment_id" keyProperty="commentId" parameterType="cn.javak.pojo.Comment" useGeneratedKeys="true">
    insert into comment (blog_id, user_id, content, 
      create_time, star_num)
    values (#{blogId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{starNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="comment_id" keyProperty="commentId" parameterType="cn.javak.pojo.Comment" useGeneratedKeys="true">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="blogId != null">
        blog_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="starNum != null">
        star_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="blogId != null">
        #{blogId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="starNum != null">
        #{starNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.javak.pojo.Comment">
    update comment
    <set>
      <if test="blogId != null">
        blog_id = #{blogId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="starNum != null">
        star_num = #{starNum,jdbcType=INTEGER},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.javak.pojo.Comment">
    update comment
    set blog_id = #{blogId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      star_num = #{starNum,jdbcType=INTEGER}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
</mapper>