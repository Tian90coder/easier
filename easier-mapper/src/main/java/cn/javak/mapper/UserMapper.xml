<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.javak.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="cn.javak.pojo.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="head_pic" jdbcType="VARCHAR" property="headPic" />
    <result column="sign" jdbcType="VARCHAR" property="sign" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="iphone" jdbcType="CHAR" property="iphone" />
    <result column="register_time" jdbcType="TIMESTAMP" property="registerTime" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, username, `password`, last_login_time, nick_name, head_pic, sign, birthday, 
    gender, email, iphone, register_time
  </sql>
  <sql id="only_info">
    user_id, nick_name, head_pic
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
    select *
    from user
    where username = #{username,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="user_id" keyProperty="userId" parameterType="cn.javak.pojo.User" useGeneratedKeys="true">
    insert into user (username, `password`, last_login_time, 
      nick_name, head_pic, sign, 
      birthday, gender, email, 
      iphone, register_time)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=TIMESTAMP}, 
      #{nickName,jdbcType=VARCHAR}, #{headPic,jdbcType=VARCHAR}, #{sign,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=DATE}, #{gender,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, 
      #{iphone,jdbcType=CHAR}, #{registerTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="user_id" keyProperty="userId" parameterType="cn.javak.pojo.User" useGeneratedKeys="true">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="headPic != null">
        head_pic,
      </if>
      <if test="sign != null">
        sign,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="iphone != null">
        iphone,
      </if>
      <if test="registerTime != null">
        register_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="headPic != null">
        #{headPic,jdbcType=VARCHAR},
      </if>
      <if test="sign != null">
        #{sign,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="iphone != null">
        #{iphone,jdbcType=CHAR},
      </if>
      <if test="registerTime != null">
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.javak.pojo.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="headPic != null">
        head_pic = #{headPic,jdbcType=VARCHAR},
      </if>
      <if test="sign != null">
        sign = #{sign,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="iphone != null">
        iphone = #{iphone,jdbcType=CHAR},
      </if>
      <if test="registerTime != null">
        register_time = #{registerTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.javak.pojo.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      nick_name = #{nickName,jdbcType=VARCHAR},
      head_pic = #{headPic,jdbcType=VARCHAR},
      sign = #{sign,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      gender = #{gender,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      iphone = #{iphone,jdbcType=CHAR},
      register_time = #{registerTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

  <select id="selectOnlyInfo" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="only_info" />
    from user
  </select>
  <select id="selectByEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    *
    from user
    where email = #{email, jdbcType=VARCHAR}
  </select>
  <select id="selectByNN" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    *
    from user
    where nick_name = #{nickName, jdbcType=VARCHAR}
  </select>
</mapper>